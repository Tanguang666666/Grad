% Thomas Satterly
% AAE 537
% Homework 4, Part (v)

close all;
clc;
clear;

% Setup standard parameters
aae537.hw4.setup();

betas  = linspace(0.35, 0.99, 250);
CPRs = linspace(5, 80, 250);
M5_b = 0.5;
A5_c = 15.645512875129334; % ft^2
M0 = 2;
err = ones(numel(betas), numel(CPRs));
z = numel(CPRs);
parfor j = 1:numel(betas)
    beta = betas(j);

    for i = 1:z
        CPR = CPRs(i);
        % Run engine solver
        [~, err(j, i)] = aae537.hw4.solveEngine(...
            'eta_c', eta_c, ...
            'eta_b', eta_b, ...
            'eta_t', eta_t, ...
            'eta_ab', eta_ab, ...
            'eta_n', eta_n, ...
            'h', h, ...
            'Tt4', Tt4_max, ...
            'Tt7', Tt7_max, ...
            'M0', M0, ...
            'q', q, ...
            'T0', T0, ...
            'CPR', CPR, ...
            'gamma', gamma, ....
            'cp', cp, ...
            'm_dot', m_dot, ...
            'beta', beta, ...
            'R', R, ...
            'M5_b', M5_b, ...
            'A5_c', A5_c);
    end
    % Find where the error is at a minimum
end
figure;
hold on;
[C, cObj] = contour(CPRs, betas, real(err), [0 0]);
xlabel('CPR');
ylabel('\beta');
title('Feasible Design Space at M_0 = 2');

% Select a few points along the curve and calculate thrust and SFC
numPoints = 5;
for i = 1:numPoints
    thisIndex = floor((size(C, 2) - 1) / (numPoints - 1) * (i - 1));
    thisCPR(i) = C(1, min(thisIndex + 2, size(C, 2)));
    thisBeta(i) = C(2, min(thisIndex + 2, size(C, 2)));
    [engineData, ~] = aae537.hw4.solveEngine(...
            'eta_c', eta_c, ...
            'eta_b', eta_b, ...
            'eta_t', eta_t, ...
            'eta_ab', eta_ab, ...
            'eta_n', eta_n, ...
            'h', h, ...
            'Tt4', Tt4_max, ...
            'Tt7', Tt7_max, ...
            'M0', M0, ...
            'q', q, ...
            'T0', T0, ...
            'CPR', thisCPR(i), ...
            'gamma', gamma, ....
            'cp', cp, ...
            'm_dot', m_dot, ...
            'beta', thisBeta(i), ...
            'R', R, ...
            'M5_b', M5_b, ...
            'A5_c', A5_c);
    thrust(i) = engineData.thrust;
    SFC(i) = engineData.SFC * 3600;
    
    % Plot point over the curve
    plot(thisCPR(i), thisBeta(i), 'k*');
    text(thisCPR(i) + 2, thisBeta(i), sprintf('CPR = %0.3f, beta = %0.3f\nThrust: %0.1f lbf\nSFC: %0.4f lbm / (lbf * hr)', thisCPR(i), thisBeta(i), thrust(i), SFC(i)));
end

yLimits = ylim();
xLimits = xlim();
ylim(yLimits * [0.9 0; 0 1.1]);
xlim(xLimits * [0.9 0; 0 1.3]);




